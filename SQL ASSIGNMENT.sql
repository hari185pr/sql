---1. Display the number of states present in the LocationTable.
select count(distinct State) as no_of_states from Location
---2. How many products are of regular type?
select count(distinct Product) as no_of_products from Product where Type='regular'
---3. How much spending has been done on marketing of product ID 1?
select sum(Marketing) as [total marketing] from fact where ProductId=1
select * from fact
---4. What is the minimum sales of a product?
select min(sales) as [minmum sales] from fact
---5. Display the max Cost of Good Sold (COGS).
select max(COGS) as[max cogs] from fact
---6. Display the details of the product where product type is coffee.
select * from Product where Product_Type='coffee'
---7. Display the details where total expenses are greater than 40.
select * from fact where Total_Expenses>40
---8. What is the average sales in area code 719?
select avg(Sales) as [average sales] from fact where Area_Code = 719
---9. Find out the total profit generated by Colorado state.
select sum(f.Profit) as [total profit] from fact f join Location L on f.Area_Code=L.Area_Code where L.State='Colorado'
---10. Display the average inventory for each product ID.
select ProductId, avg(Inventory) as [avg inventyory] from fact
group by ProductId 
order by ProductId
---11. Display state in a sequential order in a Location Table.
select distinct state from Location order by state 
---12. Display the average budget of the Product where the average budget margin should be greater than 100.
select Area_Code ,avg(Budget_Margin) as [avg margin] from fact
group by Area_Code having avg(Budget_Margin)>100
---13. What is the total sales done on date 2010-01-01?
select sum(Sales) as[total sales] from fact where Date='2010-01-01'
---14. Display the average total expense of each product ID on an individual date.
select date,ProductId,avg(Total_expenses) as [avg esxpense] from fact
group by date,ProductId
order by date,ProductId
---15. Display the table with the following attributes such as date, productID,product_type, product, sales, profit, state, area_code.
select f.date,p.*,f.sales,f.Profit,L.state,L.Area_Code from fact f join Location L on f.Area_Code=L.Area_Code join Product P on f.ProductId=P.ProductId
---16. Display the rank without any gap to show the sales wise rank.
select Sales, Dense_rank() over (order by sales desc) as [drank] from fact
---17. Find the state wise profit and sales.
select L.State,sum(f.Profit) as [total profit],sum (f.Sales) as [total sales] from fact f join Location L on f.Area_Code=L.Area_Code group by L.state
---18. Find the state wise profit and sales along with the product name.
select L.State,P.Product,sum(f.Profit) as [total profit],sum (f.Sales) as [total sales] from fact f join Location L on f.Area_Code=L.Area_Code join Product P on f.ProductId=P.ProductId group by L.state,P.Product
---19. If there is an increase in sales of 5%, calculate the increased sales.
select Sales,(Sales*1.05) as[increased sales] from fact
---20. Find the maximum profit along with the product ID and producttype.
select P.ProductId,P.Product_Type,max(f.Profit) as [max profit] from fact f join Product P on f.ProductId=P.ProductId group by P.ProductId,P.Product_Type 
---21. Create a stored procedure to fetch the result according to the product type from Product Table.
create procedure Proc_pro @type varchar(30) 
as 
select * from Product where Product_type=@type



exec Proc_pro 'tea'
exec Proc_pro 'coffee'

---22. Write a query by creating a condition in which if the total expenses is less than 60 then it is a profit or else loss.
select Total_Expenses,iif(Total_Expenses<60,'profit','loss') as [status] from fact

---23. Give the total weekly sales value with the date and product ID details. Use roll-up to pull the data in hierarchical order.
select DATEPART(Week,Date) as [week],ProductId,sum(Sales) as [total sales] from fact group by DATEPART(Week,Date),ProductId order by DATEPART(Week,Date),ProductId
---24. Apply union and intersection operator on the tables which consist of attribute area code.
select Area_Code from fact union Select Area_Code from Locations
select Area_Code from fact intersect Select Area_Code from Locations
---25. Create a user-defined function for the product table to fetch a particular product type based upon the user’s preference.
create function func_Product (@type varchar(30))
returns table
return
(select * from Product where Product_Type=@type)

select * from func_Product('coffee')

---26. Change the product type from coffee to tea where product ID is 1 and undo it.
begin transaction 
update Product
set Product_Type ='tea'
where ProductId=1

rollback transaction

select * from Product

---27. Display the date, product ID and sales where total expenses are between 100 to 200.
select date, ProductID,Sales from fact where Total_Expense between 100 and 200

---28. Delete the records in the Product Table for regular type.
begin transaction 
delete from Product where Type='regular'

rollback transaction
select * from Product
---29. Display the ASCII value of the fifth character from the columnProduct.
select Product,Substring(Product,5,1) as [character],ASCII(substring(Product,5,1))  as [ASCII] from Product